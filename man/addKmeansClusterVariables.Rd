% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add-family.R
\name{addKmeansClusterVariables}
\alias{addKmeansClusterVariables}
\title{Add kmeans clustering results to overall data}
\usage{
addKmeansClusterVariables(
  object,
  variable_set,
  k,
  phase = NULL,
  method_kmeans = NULL,
  verbose = NULL
)
}
\arguments{
\item{object}{A valid cypro object.}

\item{variable_set}{Character value. Denotes the variable set of interest. Use \code{getVariableSetNames()}
to obtain all names of currently stored variable sets in your object.}

\item{k}{Numeric vector. All k-values of interest.}

\item{phase}{Character value. The ordinal value referring to the phase of interest (e.g. \emph{'first'}, \emph{'second'} etc.).
referring to the phase of interest. If set to NULL takes the phase denoted as default with \code{adjustDefault()}.

Ignored if the experiment design contains only one phase.}

\item{method_kmeans}{Character vector (or value see details for more.) Denotes the algorithm of interest defaults
to \emph{'Hartigan-Wong'}.

Use \code{validKmeansMethods()} to obtain all valid input options.}

\item{verbose}{Logical. If set to TRUE informative messages regarding
the computational progress will be printed.

(Warning messages will always be printed.)}
}
\value{
An updated cypro object that contains the data added.
}
\description{
Adds the clustering results of \code{computeKmeansCluster()} in form
of grouping variables to the object's overall data - making them available for the \code{across}-
argument.
}
\details{
The last step of the kmeans clustering pipeline. This function iterates
over all combinations of \code{method_kmeans} and \code{k} and
adds the respective clustering variables to the object's overall data named according to
the following syntax: \emph{kmeans_\code{method_kmeans}_k_\code{k}_\code{(variable_set)}}.
This naming concept results in somewhat bulky but unambiguous clustering names. You can always
rename grouping variables with \code{renameGroupingVariable()}.

Use \code{getGroupingVariableNames()} afterwards to obtain all grouping variables.
}
