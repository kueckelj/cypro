% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mutate-data-frames.R
\name{mutateTracksDf}
\alias{mutateTracksDf}
\title{Create and modify data variables}
\usage{
mutateTracksDf(object, ..., group_by = NULL)
}
\arguments{
\item{object}{Any object for whose class a method has been defined.}

\item{...}{Name-value pairs according to the syntax of \code{dplyr::mutate()}.
This can be single or several expressions as well as usage of \code{dplyr::across()} if several
variables are supposed to be affected. See details for output requirements.}

\item{group_by}{Character vector or NULL. If character, denotes the grouping variables
according to which the cell data.frame is grouped via \code{dplyr::group_by()}
prior to the call to \code{dplyr::mutate()}.}
}
\value{
An updated version of the input \code{cypro}-object.
}
\description{
Create and modify data variables
}
\details{
The data.frame that is given to \code{dplyr::mutate()} contains all variables
from slots \emph{cluster, meta} and \emph{well_plate}. Meaning that you
can refer to these variables in more complex mutations. Prior to setting the
mutated data.frame back in its original slot data variables from other slots are removed.

Output requirements to ensure the cypro objects integrity:

Protected variables such as \emph{cell_id, x_coords, y_coords} etc.
must not be changed. Attempts result in an error message.

New variables must be numeric.

In case of multiple phase experiment design the mutation is applied
to track data.frame of all phases.

Discarding variables with e.g. \code{new_variable = NULL} is not allowed. Use
the \code{discard*()}-functions for that matter.
}
