% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rename-content.R
\name{renameStatsDf}
\alias{renameStatsDf}
\alias{renameStatsDfWith}
\title{Rename statistic variables}
\usage{
renameStatsDf(object, ...)

renameStatsDfWith(object, ..., phase = NULL)
}
\arguments{
\item{object}{A valid cypro object.}

\item{phase}{Character value. The ordinal value referring to the phase of interest (e.g. \emph{'first'}, \emph{'second'} etc.).
referring to the phase of interest. If set to NULL takes the phase denoted as default with \code{adjustDefault()}.

Ignored if the experiment design contains only one phase.}
}
\value{
An updated version of the input \code{cypro}-object.
}
\description{
Implementations of the functions \code{dplyr::rename()} and
\code{dplyr::rename_with()} that can be used to rename the variables of the cell statistic
data.frame.

\code{renameClusterDf()} changes the names of individual variables using \emph{new_name} = \emph{old_name}
syntax. \code{renameClusterDfWith()} renames variables with a function specified in argument \code{.fn}.
}
\details{
The variable \emph{cell_id} is removed prior to the renaming as it is protected. The renaming process must not
result in columns that carry either name of \emph{cell_id, condition, cell_line, well_plate_name,
well_index, well_image} or \emph{well}.

Renaming the statistic data.frame affects all slots of the cypro object that refer to
statistic variables (correlation analysis, variable sets etc.). All are renamed according to
the input.

Use \code{getStatVariableNames()} to check if renaming resulted in
the desired output.
}
