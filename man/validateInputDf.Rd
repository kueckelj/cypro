% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/validate.R
\name{validateInputDf}
\alias{validateInputDf}
\alias{validateInputDf,Cypro-method}
\title{Validate input data.frame content}
\usage{
validateInputDf(object, df, ...)

\S4method{validateInputDf}{Cypro}(object, df, check_vars = TRUE, check_additional = TRUE)
}
\arguments{
\item{object}{Any object for whose class a method has been defined.}

\item{df}{A data.frame.}
}
\value{
A list named according to each variable found in the input data.frame provided
with argument \code{df}.

Slots of the list that are occupied by \code{AssignableVariable}s are named according to their
\code{name_in_cypro}. If a variable has met all requirements it is stored in the returned list
as it was returned by it's @check_content-function. If not, the corresponding error message
occupies the variables slot in the output list.

Slots of the list that are occupied by additional variables are named according to their
name in the input data.frame.
}
\description{
Validates that the validity of an input data.frame. See details
for more.
}
\details{
A data.frame that is about to be loaded and added to the data of
the \code{Cypro} object must meet certain requirements.

First, during \code{assignVariables()} the variable names of the future data input
have been assigned to data variables that \code{cypro} knows, such as \emph{x_coords},
\emph{cell_id}, \emph{frame_num} etc. \code{validateInputDf()} checks if all
these assigned variable names exist in the input data.frame.

Secondly, if all variable names exist \code{validateInputDf()} checks if
each  variable of the input data.frame meets all the requirements of
the data variable it has been assigned to by using the function that is stored
in slot @check_content of the S4-class \code{AssignableVariable} by which
every assignable data variable \code{cypro} knows is represented. This can range from simple type testing via
\code{is.numeric()} to more sophisticated checks. E.g the variable \emph{Angle from last point (aflp)}
of the migration analysis can only contain values ranging between 0 and 360.

Variable names that are stored under additional variables in the \code{Cypro} object are looked
up if argument \code{check_additional} is set to TRUE. If an additional variable is not part of the input data.frame
the output list will contain a slot named after it with a corresponding message.
}
