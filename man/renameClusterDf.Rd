% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rename-content.R
\name{renameClusterDf}
\alias{renameClusterDf}
\alias{renameClusterDfWith}
\title{Rename cluster variables}
\usage{
renameClusterDf(object, ..., phase = NULL)

renameClusterDfWith(object, ..., phase = NULL)
}
\arguments{
\item{object}{A valid cypro object.}

\item{phase}{Character value. The ordinal value referring to the phase of interest (e.g. \emph{'first'}, \emph{'second'} etc.).
referring to the phase of interest. If set to NULL takes the phase denoted as default with \code{adjustDefault()}.

Ignored if the experiment design contains only one phase.}
}
\value{
An updated version of the input \code{cypro}-object.
}
\description{
Implementations of the functions \code{dplyr::rename()} and
\code{dplyr::rename_with()} that can be used to rename the variables of the cell cluster
data.frame.

\code{renameClusterDf()} changes the names of individual variables using \emph{new_name} = \emph{old_name}
syntax. \code{renameClusterDfWith()} renames variables with a function specified in argument \code{.fn}.
}
\details{
The variables \emph{cell_id, cell_line} and \emph{condition} are removed
prior to the renaming as they are protected. The renaming process must not
result in columns that carry one of these names nor in the names \emph{well_plate_name,
well_index, well_image} or \emph{well}.

Use \code{getGroupingVariableNames()} to check if renaming resulted in
the desired output.
}
\seealso{
\code{dplyr::rename()}, \code{dplyr::rename_with()}
}
