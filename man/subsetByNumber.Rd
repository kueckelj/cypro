% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/subsetBy.R
\name{subsetByNumber}
\alias{subsetByNumber}
\alias{subsetByNumber,CyproScreening-method}
\alias{subsetByNumber,CyproTimeLapse-method}
\title{Create data subset by number}
\usage{
subsetByNumber(object, ...)

\S4method{subsetByNumber}{CyproScreening}(
  object,
  across = c("cell_line", "condition"),
  n_by_group = NULL,
  n_total = NULL,
  weighted = TRUE,
  reasoning = NA_character_,
  seed = NULL,
  verbose = TRUE
)

\S4method{subsetByNumber}{CyproTimeLapse}(
  object,
  across = c("cell_line", "condition"),
  n_by_group = NULL,
  n_total = NULL,
  weighted = NULL,
  reasoning = NA_character_,
  seed = NULL,
  verbose = TRUE
)
}
\arguments{
\item{object}{Any object for whose class a method has been defined.}

\item{across}{The grouping variables across which to reduce the cell number.}

\item{n_by_group}{Numeric value or NULL. If numeric, denotes the number of
cells that are selected by every group of the grouping variables
denoted in \code{across}..}

\item{n_total}{Numeric value or NULL, If numeric, denotes the exact number of cells
the \code{Cypro} is supposed to contain after the subsetting.}

\item{weighted}{Logical. Only relevant if \code{n_total} is numeric.
If TRUE, the proportion of cells across the groups of the grouping variables
denoted in \code{across} is maintained (option: \emph{total_weighted}). If FALSE,
an equal number of cells is picked from each group (option: \emph{total_fixed}).}

\item{reasoning}{Character value. Allows two write a short description of how the cell ids according
to which the object is filtered were selected. This description is included in the output of \code{printSubsetHistory()}.
Ignored if set to NULL.}

\item{seed}{Numeric value or NULL. If numeric, is used to set seed and to make
the subsetting reproducible. Is stored along with the argument input
above in the created \code{CyproSubset} objects.}

\item{verbose}{Logical. If set to TRUE informative messages regarding
the computational progress will be printed.

(Warning messages will always be printed.)}
}
\value{
The input object containing a data subset.
}
\description{
Subset functions allow to conveniently split your data by certain characteristics such
as cell lines, conditions, cluster etc. or for specific cell ids. This might be useful if you want apply some machine learning
algorithms such as clustering and correlation on only a subset of cells. See sections below for more information.
}
\details{
Creating subsets of your data affects analysis results such as clustering,
dimensional reduction and correlation which is why slot @analysis is reset.

Within the data of slot @cdata, the cluster data.frame is emptied. Additionally,
levels of grouping variables that are not used any longer after the subsetting
are dropped.

To prevent inadvertent overwriting the default directory is reset as well.
Make sure to set a new one via \code{setDefaultDirectory()}.

The name of the returned \code{Cypro} object (slot @experiment) is suffixed
with \emph{_Subset\code{<nth_subset>}}.

The mechanism and the information with which you create the subset is stored in the output object.
Use \code{printSubsetHistory()} to reconstruct the way from the original object
to the current one.
}
\section{Subset mechanism}{


Subsetting by number reduces the number of cells in the object by random selection
across certain grouping variables. There are three ways to subset by number:

\itemize{
\item{\emph{groupwise:}}{ A fixed number of cells is picked from every group. The
resulting total number of cells in the new \code{Cypro} object is the sum of groups
of the chosen grouping variables multiplied by the denoted number in \code{n_by_group}.}
\item{\emph{total_weighted:}}{ The number of cells in the whole data set is reduced
to a fixed number. In the new \code{Cypro} object the original proportion of cells in
the groups of the grouping variable across which the object is subsetted stays the same.}
\item{\emph{total_fixed:}}{ The number of cells in the whole data set is reduced
to a fixed number. In the new \code{Cypro} object very group of the grouping variable
across which the data is subsetted contains the same number of cells.}
}
}

\section{Detailed example}{

\code{subsetByNumber()} first unites all grouping variables across which the number
of cells is supposed to be reduced to one single new variable. Cell IDs are then
grouped by this variable via \code{dplyr::group_by()}. The number of cell IDs is then reduced
via \code{dplyr::slice_sample()}. The exact number of remaining cells can be specified
in two different ways by using either argument
\code{n_by_group} or \code{n_total}:

If specified with \code{n_by_group()}: The numeric value is given to argument \code{n}
of \code{dplyr::slice_sample()}. E.g. \code{across} = \emph{'condition'} and \code{n_by_group}
= 1000, if the \code{Cypro} object contains 6 different conditions the returned object contains
6000 randomly selected cells - 1000 of each condition.

If specified with \code{n_total}: The numeric value given to argument \code{n} of
\code{dplyr::slice_sample()} is calculated like this:

n = \code{n_total} / number of groups

E.g \code{across} = \emph{'condition'} and \code{n_total} = 10.000, if the \code{Cypro} object contains
4 different conditions 2500 cells of each condition will be in the returned object.

If you want to keep the distribution across a grouping variable as is set argument \code{weighted}
to TRUE. In this case every groups proportion of cells is computed and the number of cells
representative for each group is adjusted.

E.g \code{across} = \emph{'condition'} and \code{n_total} = 10.000, if the \code{Cypro} object contains
4 different conditions and condition a represents 40\% of all cells while condition b-d each represent
20 \% the returned \code{Cypro} object contains 4000 cells of condition a and each 2000 cells of condition b-d.
}

