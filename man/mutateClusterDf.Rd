% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mutate-data-frames.R
\name{mutateClusterDf}
\alias{mutateClusterDf}
\alias{mutateMetaDf}
\alias{mutateStatsDf}
\title{Create and modify data variables}
\usage{
mutateClusterDf(object, ..., group_by = NULL, phase = NULL)

mutateMetaDf(object, ..., group_by = NULL, phase = NULL)

mutateStatsDf(object, ..., group_by = NULL)
}
\arguments{
\item{object}{Any S4-object for whose class a method has been defined.}

\item{...}{Name-value pairs according to the syntax of \code{dplyr::mutate()}.
This can be single or several expressions as well as usage of \code{dplyr::across()} if several
variables are supposed to be affected. See details for output requirements.}

\item{group_by}{Character vector or NULL. If character, denotes the grouping variables
according to which the cell data.frame is grouped via \code{dplyr::group_by()}
prior to the call to \code{dplyr::mutate()}.}

\item{phase}{Character or numeric. If character, the ordinal value referring to the phase of interest (e.g. \emph{'first'}, \emph{'second'} etc.).
referring to the phase of interest or \emph{'all'}. If numeric, the number referring to the phase.

If set to NULL takes the phase denoted as default with \code{adjustDefault()}.

Ignored if the experiment design contains only one phase.}
}
\value{
An updated version of the input \code{cypro}-object.
}
\description{
Implementation of \code{dplyr::mutate()} that allows
to modify cell data.frames of the cypro object.
}
\details{
Process:

The data.frame that is given to \code{dplyr::mutate()} contains all variables
from slots \emph{cluster, meta, stats} and \emph{well_plate}. Meaning that you
can refer to variables from slot cluster or well plate, for instance, if you
want to mutate the stats data.frame. Prior to setting the
mutated data.frame back in its original slot data variables from other slots are removed.

Output requirements to ensure the cypro objects integrity:

Protected variables such as \emph{cell_id, cell_line, condition, well_plate_name} etc.
must not be changed. Attempts result in an error message.

In case of the stats data.frame new variables must be numeric. In case
of the other three slots new variables must be of class factor or character.
The latter is converted to factor automatically.

Discarding variables with e.g. cluster_variable_x = NULL is not allowed. Use
the \code{discard*()}-functions for that matter.
}
